; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:nucleo_f411re]
platform = ststm32
board = nucleo_f411re
framework = stm32cube

; Build options
build_flags = 
    -DUSE_HAL_DRIVER
    -DSTM32F411xE
    -DDEBUG
    -DAKS_SECURITY_ENABLED
    -DAKS_WATCHDOG_ENABLED
    -DAKS_MEMORY_PROTECTION
    -Wall
    -Wextra
    -Wformat-security
    -Wno-unused-parameter
    -O2
    -g
    -ffunction-sections
    -fdata-sections
    -fno-common
    -fstack-usage
    -Wl,--gc-sections
    -Wl,--build-id=none
    -Wl,-z,relro
    -Wl,-z,now
    -Wl,-z,noexecstack
    -Wl,--warn-common
    -Iinclude
    -Iinclude/core
    -Iinclude/communication
    -Iinclude/sensors
    -Iinclude/actuators
    -Iinclude/safety
    -Iinclude/utils
    -Iinclude/hal
    -Iinclude/aks_main
    -Iinclude/motor_controller

; Include directories
build_src_filter = 
    +<*>
    +<core/*>
    +<communication/*>
    +<sensors/*>
    +<actuators/*>
    +<safety/*>
    +<utils/*>
    -<motor_controller/*>
    -<safety/aks_security.c>

; Include paths
build_unflags = 
    -Werror

; Monitor settings
monitor_speed = 115200
monitor_port = /dev/ttyACM0

; Upload settings with enhanced flags for reliability
upload_protocol = mbed
debug_tool = stlink

; OpenOCD specific settings to prevent verification issues
board_upload.offset_address = 0x08000000
; board_build.ldscript = config/STM32F411RETx_FLASH.ld

; Use default PlatformIO ST-LINK upload (more reliable)
; upload_command = openocd -f interface/stlink.cfg -f target/stm32f4x.cfg -c "program {$SOURCE} 0x08000000 verify reset exit"

; Debug configuration for better flash handling
debug_server_ready_pattern = .*Listening on port \d+ for gdb connections
debug_init_cmds =
    target extended-remote $DEBUG_PORT
    $INIT_BREAK
    monitor reset halt
    $LOAD_CMDS
    monitor reset run
